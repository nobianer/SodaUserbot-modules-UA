# ---------------------------------------------------------------------------------
#  /\_/\  üåê This module was loaded through https://t.me/hikkamods_bot
# ( o.o )  üîê Licensed under the GNU AGPLv3.
#  > ^ <   ‚ö†Ô∏è Owner of heta.hikariatama.ru doesn't take any responsibilities or intellectual property rights regarding this script
# ---------------------------------------------------------------------------------
# Name: aniquotes
# meta developer: @nobianermodules
# Commands:
# .aniq
# ---------------------------------------------------------------------------------

#             ‚ñà ‚ñà ‚ñÄ ‚ñà‚ñÑ‚ñÄ ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñà ‚ñÄ
#             ‚ñà‚ñÄ‚ñà ‚ñà ‚ñà ‚ñà ‚ñà‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÑ ‚ñà
#              ¬© Copyright 2022
#           https://t.me/hikariatama
#
# üîí      Licensed under the GNU AGPLv3
# üåê https://www.gnu.org/licenses/agpl-3.0.html

# meta pic: https://static.dan.tatar/aniquotes_icon.png
# meta banner: https://mods.hikariatama.ru/badges/aniquotes.jpg
# meta developer: @hikarimods
# scope: hikka_only
# scope: hikka_min 1.2.10

from random import choice

from telethon.tl.types import Message

from .. import loader, utils


@loader.tds
class AnimatedQuotesMod(loader.Module):
    """–ü—Ä–æ—Å—Ç–∏–π –º–æ–¥—É–ª—å –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–Ω—ñ–º–æ–≤–∞–Ω–∏—Ö —Å—Ç—ñ–∫–µ—Ä—ñ–≤ —á–µ—Ä–µ–∑ –±–æ—Ç–∞"""

    strings = {
        "name": "AnimatedQuotes",
        "no_text": (
            "<emoji document_id=5312526098750252863>üö´</emoji> <b>Provide a text to"
            " create sticker with</b>"
        ),
        "processing": (
            "<emoji document_id=5451646226975955576>‚åõÔ∏è</emoji> <b>Processing...</b>"
        ),
    }

    strings_ua = {
        "no_text": (
            "<emoji document_id=5312526098750252863>üö´</emoji> <b>–í–∫–∞–∂–∏ —Ç–µ–∫—Å—Ç –¥–ª—è"
            " —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç—ñ–∫–µ—Ä–∞</b>"
        ),
        "processing": (
            "<emoji document_id=5451646226975955576>‚åõÔ∏è</emoji> <b>–û–±—Ä–æ–±–∫–∞...</b>"
        ),
        "_cmd_doc_aniq": "<text> - –°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–Ω—ñ–º–æ–≤–∞–Ω–∏–π —Å—Ç—ñ–∫–µ—Ä",
        "_cls_doc": "–ü—Ä–æ—Å—Ç–µ–Ω—å–∫–∏–π –º–æ–¥—É–ª—å, —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –∞–Ω—ñ–º–æ–≤–∞–Ω—ñ —Å—Ç—ñ–∫–µ—Ä–∏",
    }

    strings_de = {
        "no_text": (
            "<emoji document_id=5312526098750252863>üö´</emoji> <b>Bitte gib einen Text"
            " an, um einen Sticker zu erstellen</b>"
        ),
        "processing": (
            "<emoji document_id=5451646226975955576>‚åõÔ∏è</emoji> <b>Verarbeitung...</b>"
        ),
        "_cmd_doc_aniq": "<text> - Erstelle einen animierten Sticker",
        "_cls_doc": "Einfaches Modul, das animierte Sticker erstellt",
    }

    strings_hi = {
        "no_text": (
            "<emoji document_id=5312526098750252863>üö´</emoji> <b>‡§è‡§ï ‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü ‡§¶‡•á‡§Ç ‡§ú‡§ø‡§∏‡§ï‡•á"
            " ‡§≤‡§ø‡§è ‡§è‡§ï ‡§∏‡•ç‡§ü‡§ø‡§ï‡§∞ ‡§¨‡§®‡§æ‡§®‡§æ ‡§π‡•à</b>"
        ),
        "processing": (
            "<emoji document_id=5451646226975955576>‚åõÔ∏è</emoji> <b>‡§™‡•ç‡§∞‡•ã‡§∏‡•á‡§∏‡§ø‡§Ç‡§ó...</b>"
        ),
        "_cmd_doc_aniq": "<text> - ‡§è‡§ï ‡§è‡§®‡•Ä‡§Æ‡•á‡§ü‡•á‡§° ‡§∏‡•ç‡§ü‡§ø‡§ï‡§∞ ‡§¨‡§®‡§æ‡§è‡§Ç",
        "_cls_doc": "‡§è‡§ï ‡§è‡§®‡•Ä‡§Æ‡•á‡§ü‡•á‡§° ‡§∏‡•ç‡§ü‡§ø‡§ï‡§∞ ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§ï ‡§∏‡§∞‡§≤ ‡§Æ‡•â‡§°‡•ç‡§Ø‡•Ç‡§≤",
    }

    strings_uz = {
        "no_text": (
            "<emoji document_id=5312526098750252863>üö´</emoji> <b>Sticker yaratish"
            " uchun"
            " matn kiriting</b>"
        ),
        "processing": (
            "<emoji document_id=5451646226975955576>‚åõÔ∏è</emoji> <b>Islenmoqda...</b>"
        ),
        "_cmd_doc_aniq": "<matn> - Animatsiya stikerni yaratish",
        "_cls_doc": "Animatsiya stikerni yaratish uchun oddiy modul",
    }

    strings_tr = {
        "no_text": (
            "<emoji document_id=5312526098750252863>üö´</emoji> <b>Bir metin girin</b>"
        ),
        "processing": (
            "<emoji document_id=5451646226975955576>‚åõÔ∏è</emoji> <b>ƒ∞≈üleniyor...</b>"
        ),
        "_cmd_doc_aniq": "<text> - Animasyonlu alƒ±ntƒ± olu≈ütur",
        "_cls_doc": "Animasyonlu stiker olu≈üturmak i√ßin basit bir mod√ºl",
    }

    async def aniqcmd(self, message: Message):
        """<text> - Create animated quote"""
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, self.strings("no_text"))
            return

        message = await utils.answer(message, self.strings("processing"))

        try:
            query = await self._client.inline_query("@QuotAfBot", args)
            await message.respond(file=choice(query).document)
        except Exception as e:
            await utils.answer(message, str(e))
            return

        if message.out:
            await message.delete()
