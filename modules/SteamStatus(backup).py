# meta developer: @nobianermodules
import requests
from bs4 import BeautifulSoup
from telethon.tl.functions.account import UpdateProfileRequest
from .. import loader, utils
import asyncio

@loader.tds
class SteamStatusMod(loader.Module):
    """
    –ú–æ–¥—É–ª—å –¥–ª—è –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ Steam.
    """

    strings = {
        "name": "SteamStatus",
        "no_profile_link": "üö´ –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—Ä–æ—Ñ—ñ–ª—å –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É .linkprofile <—Å—Å—ã–ª–∫–∞>.",
        "profile_link_set": "üîó –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—Ä–æ—Ñ—ñ–ª—å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {}",
        "bio_set": "üìù –ü–æ–ª–µ '–ü—Ä–æ —Å–µ–±–µ' –±—É–¥–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏—Å—è.",
        "playing_game": "üéÆ –ì—Ä–∞—î –≤: {}",
        "not_playing": "üö´ –ù–µ –≥—Ä–∞—î.",
        "error": "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ Steam.",
        "profile_info": "<emoji document_id=5373144051690258848>üì±</emoji> –ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {}\n\n<emoji document_id=5373012449597335010>üë§</emoji> –ù—ñ–∫–Ω–µ–π–º: {}\n<emoji document_id=5463054218459884779>üå°</emoji> –†—ñ–≤–µ–Ω—å: {}\n<emoji document_id=5467583879948803288>üéÆ</emoji> –°—Ç–∞—Ç—É—Å: {}\n<emoji document_id=5361741454685256344>üéÆ</emoji> –Ü–≥–æ—Ä: {}\n<emoji document_id=5372926953978341366>üë•</emoji> –î—Ä—É–∑—ñ–≤: {}\n<emoji document_id=5451646226975955576>‚åõÔ∏è</emoji> –û—Å—Ç–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∑–∞ 2 —Ç–∏–∂–Ω—ñ: {} –≥–æ–¥.",
        "proflink_info": "<emoji document_id=5373144051690258848>üì±</emoji> –ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {}\n\n<emoji document_id=5373012449597335010>üë§</emoji> –ù—ñ–∫–Ω–µ–π–º: {}\n<emoji document_id=5463054218459884779>üå°</emoji> –†—ñ–≤–µ–Ω—å: {}\n<emoji document_id=5467583879948803288>üéÆ</emoji> –°—Ç–∞—Ç—É—Å: {}\n<emoji document_id=5361741454685256344>üéÆ</emoji> –Ü–≥–æ—Ä: {}\n<emoji document_id=5372926953978341366>üë•</emoji> –î—Ä—É–∑—ñ–≤: {}\n<emoji document_id=5451646226975955576>‚åõÔ∏è</emoji> –û—Å—Ç–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∑–∞ 2 —Ç–∏–∂–Ω—ñ: {} –≥–æ–¥."
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "profile_link",
                None,
                "–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤–∞—à Steam –ø—Ä–æ—Ñ—ñ–ª—å"
            ),
            loader.ConfigValue(
                "update_interval",
                60,
                "–Ü–Ω—Ç–µ—Ä–≤–∞–ª –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å–∞ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)"
            ),
            loader.ConfigValue(
                "auto_update_bio",
                False,
                "–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –ø–æ–ª–µ '–ü—Ä–æ —Å–µ–±–µ'"
            )
        )

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self._check_task = self.client.loop.create_task(self._check_steam_status())

    async def linkprofilecmd(self, message):
        """- .linkprofile <–ø–æ—Å–∏–ª–∞–Ω–Ω—è> - –í—Å—Ç–∞–Ω–æ–≤–ª—é—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤–∞—à Steam –ø—Ä–æ—Ñ—ñ–ª—å."""
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, self.strings["no_profile_link"])
            return

        self.config["profile_link"] = args.strip()
        await utils.answer(message, self.strings["profile_link_set"].format(args.strip()))

    async def profilecmd(self, message):
        """- .profile - –ü–æ–∫–∞–∑—É—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤–∞—à Steam –ø—Ä–æ—Ñ—ñ–ª—å."""
        if not self.config["profile_link"]:
            await utils.answer(message, self.strings["no_profile_link"])
            return

        profile_data = self._get_steam_profile_data(self.config["profile_link"])
        if profile_data:
            await utils.answer(message, self.strings["profile_info"].format(
                self.config["profile_link"],
                profile_data.get('nickname', '–ù–µ–≤—ñ–¥–æ–º–æ'),
                profile_data.get('level', '–ù–µ–≤—ñ–¥–æ–º–æ'),
                profile_data.get('status', '–ù–µ –≥—Ä–∞—î'),
                profile_data.get('games', '–ù–µ–≤—ñ–¥–æ–º–æ'),
                profile_data.get('friends', '–ù–µ–≤—ñ–¥–æ–º–æ'),
                profile_data.get('recent_activity', '–ù–µ–≤—ñ–¥–æ–º–æ')
            ))
        else:
            await utils.answer(message, self.strings["error"])

    async def proflinkcmd(self, message):
        """- .proflink <–ø–æ—Å–∏–ª–∞–Ω–Ω—è> - –ü–æ–∫–∞–∑—É—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –±—É–¥—å-—è–∫–∏–π Steam –ø—Ä–æ—Ñ—ñ–ª—å."""
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, "üö´ –í–∫–∞–∂—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—Ä–æ—Ñ—ñ–ª—å Steam.")
            return

        profile_data = self._get_steam_profile_data(args.strip())
        if profile_data:
            await utils.answer(message, self.strings["proflink_info"].format(
                args.strip(),
                profile_data.get('nickname', '–ù–µ–≤—ñ–¥–æ–º–æ'),
                profile_data.get('level', '–ù–µ–≤—ñ–¥–æ–º–æ'),
                profile_data.get('status', '–ù–µ –≥—Ä–∞—î'),
                profile_data.get('games', '–ù–µ–≤—ñ–¥–æ–º–æ'),
                profile_data.get('friends', '–ù–µ–≤—ñ–¥–æ–º–æ'),
                profile_data.get('recent_activity', '–ù–µ–≤—ñ–¥–æ–º–æ')
            ))
        else:
            await utils.answer(message, self.strings["error"])

    async def setbiocmd(self, message):
        """- .setbio - –í–º–∏–∫–∞—î —Ç–∞ –≤–∏–º–∏–∫–∞—î –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∞—à–æ–≥–æ Steam —Å—Ç–∞—Ç—É—Å—É –≤ –ø–æ–ª—ñ '–ü—Ä–æ —Å–µ–±–µ'."""
        self.config["auto_update_bio"] = not self.config["auto_update_bio"]
        if self.config["auto_update_bio"]:
            await utils.answer(message, self.strings["bio_set"])
        else:
            await utils.answer(message, "üìù –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–ª—è '–ü—Ä–æ —Å–µ–±–µ' –≤–∏–º–∫–Ω–µ–Ω–æ.")

    async def _check_steam_status(self):
        """–§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É –ø—Ä–æ—Ñ—ñ–ª—è Steam."""
        while True:
            if not self.config["profile_link"]:
                await asyncio.sleep(self.config["update_interval"])
                continue
            
            profile_data = self._get_steam_profile_data(self.config["profile_link"])
            if profile_data:
                current_status = profile_data.get('status', '–ù–µ –≥—Ä–∞—î')
                
                if self.config["auto_update_bio"]:
                    await self._update_bio(current_status)
                
                if current_status != "–ù–µ –≥—Ä–∞—î":
                    print(self.strings["playing_game"].format(current_status))
                else:
                    print(self.strings["not_playing"])
            
            await asyncio.sleep(self.config["update_interval"])

    async def _update_bio(self, status):
        """–û–Ω–æ–≤–ª—é—î –ø–æ–ª–µ '–ü—Ä–æ —Å–µ–±–µ' –≤ –ø—Ä–æ—Ñ–∏–ª—ñ Telegram –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Å—Ç–∞—Ç—É—Å–∞ Steam."""
        try:
            if status != "–ù–µ –≥—Ä–∞—î":
                bio = f"üéÆ –°—Ç–∞—Ç—É—Å Steam: –ì—Ä–∞—î –≤ {status}"
            else:
                bio = "–ù–µ –≥—Ä–∞—î"

            await self.client(UpdateProfileRequest(about=bio))
        except Exception as e:
            print(f"–ü–æ–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –ø–æ–ª—è '–ü—Ä–æ —Å–µ–±–µ': {e}")

    def _get_steam_profile_data(self, profile_link):
        """–§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥—É —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –ø—Ä–æ—Ñ—ñ–ª—é Steam —ñ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞."""
        try:
            response = requests.get(profile_link)
            if response.status_code != 200:
                print(f"–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {response.status_code}")
                return None

            soup = BeautifulSoup(response.text, 'html.parser')

            # –ü–æ–∏—Å–∫ –Ω–∏–∫–Ω–µ–π–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            nickname_tag = soup.find("span", class_="actual_persona_name")
            nickname = nickname_tag.text.strip() if nickname_tag else "–ù–µ–≤—ñ–¥–æ–º–æ"

            # –ü–æ–∏—Å–∫ —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            level_tag = soup.find("span", class_="friendPlayerLevelNum")
            level = level_tag.text.strip() if level_tag else "–ù–µ–≤—ñ–¥–æ–º–æ"

            # –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä–µ
            playing_game = soup.find("div", class_="profile_in_game_header")
            game_info = soup.find("div", class_="profile_in_game_name")

            status = game_info.text.strip() if playing_game and game_info else "–ù–µ –≥—Ä–∞—î"
            
            games_tag = soup.find("a", {"href": f"{profile_link}games/?tab=all"})
            games = games_tag.find("span", {"class": "profile_count_link_total"}).text.strip() if games_tag else "–ù–µ–≤—ñ–¥–æ–º–æ"

            friends_tag = soup.find("div", {"class": "profile_friend_links profile_count_link_preview_ctn responsive_groupfriends_element"})
            friends = friends_tag.find("span", {"class": "profile_count_link_total"}).text.strip() if friends_tag else "–ù–µ–≤—ñ–¥–æ–º–æ"

            recent_activity_tag = soup.find("div", {"class": "recentgame_recentplaytime"})
            recent_activity = recent_activity_tag.text.strip().split(' ')[0] if recent_activity_tag else "0"

            return {
                "nickname": nickname,
                "level": level,
                "status": status,
                "games": games,
                "recent_activity": recent_activity,
                "friends": friends
            }

        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥—É —Å—Ç–æ—Ä—ñ–Ω–∫–∏: {e}")
            return None